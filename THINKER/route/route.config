<?php
// +-------------------------------------------------------------------------
// | THINKER [ Internet Ecological traffic aggregation and sharing platform ]
// +-------------------------------------------------------------------------
// | Copyright (c) 2019~2099 https://thinker.com All rights reserved.
// +-------------------------------------------------------------------------
// | Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )
// +-------------------------------------------------------------------------
// | Author: yangrong <3223577520@qq.com>
// +-------------------------------------------------------------------------
// [ 全局路由规则 ]
// --------------------------------------------------------------------------
declare (strict_types=1);
use think\facade\Route;
$route = [
    // PARAM
    //Route::pattern([
        // TDO全局参数定义
        //'tid' => '\\w+',
        //'aid' => '\\d+',
        //'id' => '\\w+',
    //]),
];
// pathinfo+短地址模式
$pathinfo_rewrite = [
    // 对于不存在的资源文件设置404访问
    Route::group(function () {
        Route::get('static', function () {
            return response()->code(404);
        });
    })->cache(false),
    // 会员中心
    Route::group(function () {
        Route::rule('login$', 'user/Users/login', 'GET|POST')->name('login');
        Route::rule('register$', 'user/Users/register', 'GET|POST')->name('register');
        Route::rule('centre$', 'user/Users/centre', 'GET|POST')->name('centre');
        Route::rule('account$', 'user/Users/index', 'GET|POST')->name('account');
        Route::rule('cart$', 'user/Shop/shopCartList', 'GET|POST')->name('cart');
    })->cache(true),
    // API接口
    Route::group('json', function () {
        Route::rule('arcclick$', 'api/Ajax/arcclick');
        Route::rule('downcount$', 'api/Ajax/downcount');
        Route::rule('arcpagelist$', 'api/Ajax/arcpagelist');
        Route::rule('checkuser$', 'api/Ajax/checkUser');
        Route::rule('getuserinfo$', 'api/Ajax/getTagUserInfo');
        Route::rule('captcha$', 'api/Ajax/captcha');
        Route::rule('sendemail$', 'api/Ajax/sendEmail');
        Route::rule('getarcrank$', 'api/Ajax/getArcrank');
        Route::rule('getmemberlist$', 'api/Ajax/getTagMemberlist');
        Route::rule('setinlet$', 'api/Rewrite/setInlet');
        Route::rule('closeparentlayer$', 'api/Rewrite/closeParentLayer');
        Route::rule('othershow$', 'api/Other/otherShow');
    })->cache(false),
    // 前台
    Route::group(function () {
        // 首页
        Route::get('/', 'home/Index/index')->ext('')->name('index');
        // 标签伪静态
        Route::get('tags$', 'home/Tags/index')->ext('')->name('tagsindex');
        Route::get('tags/<tagid>$', 'home/Tags/lists')->name('tagslists');
        // 搜索伪静态
        Route::get('search$', 'home/Search/lists')->name('search');
        // 留言提交
        Route::rule('guestbooksubmit$', 'home/Lists/gbookSubmit', 'GET|POST')->name('guestbooksubmit');
        // 下载文件
        Route::any('downfile$', 'home/View/downfile')->name('downfile');
        // 本地附件下载
        Route::any('downloadfile$', 'home/View/downloadFile')->name('downloadfile');
        /*由于tp6本身是不支持全局路由的，所以动态路由规则应该放到最后避免冲突且所有路由规则应该参照定义*/
        // 列表页
        Route::get('<tid>$', 'home/Lists/index')->ext('')->name('lists');
        // 内容页
        Route::get('<dirname>/<aid>$', 'home/View/index')->name('view');
    })->pattern(['dirname' => '[\\w|\\-]+', 'tid' => '[\\w|\\-]+', 'aid' => '\\d+', 'tagid' => '\\d+'])->cache(true),
];
// 额外的路由扩展定义，该目录下支持多个路由文件，路由定义必须为数组
$extraRoutePath = root_path('route/extra');
$extra_route = [];
if (is_dir($extraRoutePath)) {
    $files = glob($extraRoutePath . '*.php');
    foreach ($files as $file) {
        $extra_route[$file] = (include $file);
    }
}
if (!empty($extra_route)) {
    foreach ($extra_route as $fileElementId => $routeval) {
        if (!is_array($routeval)) {
            continue;
        }
        $route = array_merge($routeval, $route);
    }
}
// 插件模块路由
$weapp_route_file = base_path('plugins') . 'route.php';
if (file_exists($weapp_route_file)) {
    $weapp_route = (include_once $weapp_route_file);
    $route = array_merge($weapp_route, $route);
}
$route = array_merge($route, $pathinfo_rewrite);
return $route;